/* home/runner/work/gradio/gradio/js/icons/src/Clear.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent: SvelteComponent$2,
	append: append$2,
	attr: attr$2,
	detach: detach$2,
	init: init$2,
	insert: insert$2,
	noop: noop$2,
	safe_not_equal: safe_not_equal$2,
	set_style,
	svg_element: svg_element$2
} = window.__gradio__svelte__internal;
function create_fragment$2(ctx) {
	let svg;
	let g;
	let path0;
	let path1;

	return {
		c() {
			svg = svg_element$2("svg");
			g = svg_element$2("g");
			path0 = svg_element$2("path");
			path1 = svg_element$2("path");
			attr$2(path0, "d", "M18,6L6.087,17.913");
			set_style(path0, "fill", "none");
			set_style(path0, "fill-rule", "nonzero");
			set_style(path0, "stroke-width", "2px");
			attr$2(g, "transform", "matrix(1.14096,-0.140958,-0.140958,1.14096,-0.0559523,0.0559523)");
			attr$2(path1, "d", "M4.364,4.364L19.636,19.636");
			set_style(path1, "fill", "none");
			set_style(path1, "fill-rule", "nonzero");
			set_style(path1, "stroke-width", "2px");
			attr$2(svg, "width", "100%");
			attr$2(svg, "height", "100%");
			attr$2(svg, "viewBox", "0 0 24 24");
			attr$2(svg, "version", "1.1");
			attr$2(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr$2(svg, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr$2(svg, "xml:space", "preserve");
			attr$2(svg, "stroke", "currentColor");
			set_style(svg, "fill-rule", "evenodd");
			set_style(svg, "clip-rule", "evenodd");
			set_style(svg, "stroke-linecap", "round");
			set_style(svg, "stroke-linejoin", "round");
		},
		m(target, anchor) {
			insert$2(target, svg, anchor);
			append$2(svg, g);
			append$2(g, path0);
			append$2(svg, path1);
		},
		p: noop$2,
		i: noop$2,
		o: noop$2,
		d(detaching) {
			if (detaching) {
				detach$2(svg);
			}
		}
	};
}

class Clear extends SvelteComponent$2 {
	constructor(options) {
		super();
		init$2(this, options, null, create_fragment$2, safe_not_equal$2, {});
	}
}

/* home/runner/work/gradio/gradio/js/icons/src/ImagePaste.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent: SvelteComponent$1,
	append: append$1,
	attr: attr$1,
	detach: detach$1,
	init: init$1,
	insert: insert$1,
	noop: noop$1,
	safe_not_equal: safe_not_equal$1,
	svg_element: svg_element$1
} = window.__gradio__svelte__internal;
function create_fragment$1(ctx) {
	let svg;
	let path;

	return {
		c() {
			svg = svg_element$1("svg");
			path = svg_element$1("path");
			attr$1(path, "fill", "currentColor");
			attr$1(path, "d", "M13.75 2a2.25 2.25 0 0 1 2.236 2.002V4h1.764A2.25 2.25 0 0 1 20 6.25V11h-1.5V6.25a.75.75 0 0 0-.75-.75h-2.129c-.404.603-1.091 1-1.871 1h-3.5c-.78 0-1.467-.397-1.871-1H6.25a.75.75 0 0 0-.75.75v13.5c0 .414.336.75.75.75h4.78a3.99 3.99 0 0 0 .505 1.5H6.25A2.25 2.25 0 0 1 4 19.75V6.25A2.25 2.25 0 0 1 6.25 4h1.764a2.25 2.25 0 0 1 2.236-2h3.5Zm2.245 2.096L16 4.25c0-.052-.002-.103-.005-.154ZM13.75 3.5h-3.5a.75.75 0 0 0 0 1.5h3.5a.75.75 0 0 0 0-1.5ZM15 12a3 3 0 0 0-3 3v5c0 .556.151 1.077.415 1.524l3.494-3.494a2.25 2.25 0 0 1 3.182 0l3.494 3.494c.264-.447.415-.968.415-1.524v-5a3 3 0 0 0-3-3h-5Zm0 11a2.985 2.985 0 0 1-1.524-.415l3.494-3.494a.75.75 0 0 1 1.06 0l3.494 3.494A2.985 2.985 0 0 1 20 23h-5Zm5-7a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z");
			attr$1(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr$1(svg, "width", "100%");
			attr$1(svg, "height", "100%");
			attr$1(svg, "viewBox", "0 0 24 24");
		},
		m(target, anchor) {
			insert$1(target, svg, anchor);
			append$1(svg, path);
		},
		p: noop$1,
		i: noop$1,
		o: noop$1,
		d(detaching) {
			if (detaching) {
				detach$1(svg);
			}
		}
	};
}

class ImagePaste extends SvelteComponent$1 {
	constructor(options) {
		super();
		init$1(this, options, null, create_fragment$1, safe_not_equal$1, {});
	}
}

/* home/runner/work/gradio/gradio/js/icons/src/Upload.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent,
	append,
	attr,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element
} = window.__gradio__svelte__internal;
function create_fragment(ctx) {
	let svg;
	let path;
	let polyline;
	let line;

	return {
		c() {
			svg = svg_element("svg");
			path = svg_element("path");
			polyline = svg_element("polyline");
			line = svg_element("line");
			attr(path, "d", "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4");
			attr(polyline, "points", "17 8 12 3 7 8");
			attr(line, "x1", "12");
			attr(line, "y1", "3");
			attr(line, "x2", "12");
			attr(line, "y2", "15");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "width", "90%");
			attr(svg, "height", "90%");
			attr(svg, "viewBox", "0 0 24 24");
			attr(svg, "fill", "none");
			attr(svg, "stroke", "currentColor");
			attr(svg, "stroke-width", "2");
			attr(svg, "stroke-linecap", "round");
			attr(svg, "stroke-linejoin", "round");
			attr(svg, "class", "feather feather-upload");
		},
		m(target, anchor) {
			insert(target, svg, anchor);
			append(svg, path);
			append(svg, polyline);
			append(svg, line);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(svg);
			}
		}
	};
}

class Upload extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export { Clear as C, ImagePaste as I, Upload as U };
//# sourceMappingURL=Upload-96564545.js.map
